/*----- PROTECTED REGION ID(GigeCam::ClassFactory.cpp) ENABLED START -----*/
static const char *RcsId = "$Header: /home/cvsadm/cvsroot/fermi/servers/gigecam/src/ClassFactory.cpp,v 1.4 2014-08-28 07:49:45 giulio Exp $";
//+=============================================================================
//
// file :        ClassFactory.cpp
//
// description : C++ source for the class_factory method of the DServer
//               device class. This method is responsible to create
//               all class singletin for a device server. It is called
//               at device server startup
//
// project :     TANGO Device Server
//
// $Author: giulio $
//
// $Revision: 1.4 $
//
// $Log: ClassFactory.cpp,v $
// Revision 1.4  2014-08-28 07:49:45  giulio
// Added imagesum attribute and scA1400 ccd
//
// Revision 1.3  2011-05-13 09:44:00  giulio
// Fixed some bugs, moved to tango7, supported Pylon 2.3.3
//
// Revision 1.2  2010/04/15 13:25:54  giulio
// New revision
//
// Revision 1.1.1.1  2009/04/20 08:23:30  giulio
// Import iniziale di gigecam.
//
//
// copyleft :    European Synchrotron Radiation Facility
//               BP 220, Grenoble 38043
//               FRANCE
//
//-=============================================================================
//
//  		This file is generated by POGO
//	(Program Obviously used to Generate tango Object)
//
//         (c) - Software Engineering Group - ESRF
//=============================================================================


#include <tango.h>
#include <GigeCamClass.h>

/**
 *	Create GigeCamClass singleton and store it in DServer object.
 */

void Tango::DServer::class_factory()
{

	add_class(GigeCam_ns::GigeCamClass::init("GigeCam"));

}
/*----- PROTECTED REGION END -----*/	//	GigeCam::ClassFactory.cpp
